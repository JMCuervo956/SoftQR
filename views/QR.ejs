<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Escanear Código QR</title>
  <style>
    video {
      width: 100%;
      height: auto;
      border: 1px solid black;
    }
    #output {
      margin-top: 10px;
      font-size: 16px;
      color: green;
    }
    #scanButton {
      margin-top: 10px;
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      font-size: 16px;
      border: none;
      cursor: pointer;
    }
    #scanButton:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }
  </style>
</head>
<body>

  <h1>Escanear Código QR</h1>
  <video id="video" autoplay></video>
  <div id="output">Esperando QR...</div>
  <button id="scanButton">Escanear QR</button>

  <!-- Cargar la librería jsQR desde un CDN -->
  <script src="https://cdn.jsdelivr.net/npm/jsqr/dist/jsQR.js"></script>

  <script>
    const videoElement = document.getElementById('video');
    const outputElement = document.getElementById('output');
    const scanButton = document.getElementById('scanButton');

    let isScanning = false; // Para controlar si estamos escaneando

    // Función para acceder a la cámara
    function startCamera() {
      // Primero enumeramos los dispositivos disponibles
      navigator.mediaDevices.enumerateDevices().then(devices => {
        const videoDevices = devices.filter(device => device.kind === 'videoinput');
        
        // Intentamos encontrar la cámara trasera
        const backCamera = videoDevices.find(device => device.label.toLowerCase().includes('back') || device.deviceId);

        // Si encontramos la cámara trasera, la usamos
        if (backCamera) {
          navigator.mediaDevices.getUserMedia({
            video: { deviceId: backCamera.deviceId }
          })
          .then((stream) => {
            videoElement.srcObject = stream;
            outputElement.textContent = 'Esperando QR...';
          })
          .catch((error) => {
            console.error('Error al acceder a la cámara:', error);
            outputElement.textContent = 'No se pudo acceder a la cámara.';
          });
        } else {
          // Si no encontramos la cámara trasera, intentamos usar la cámara frontal
          console.log('Cámara trasera no encontrada, usando cámara frontal');
          navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } })
            .then((stream) => {
              videoElement.srcObject = stream;
              outputElement.textContent = 'Esperando QR...';
            })
            .catch((error) => {
              console.error('Error al acceder a la cámara frontal:', error);
              outputElement.textContent = 'No se pudo acceder a la cámara.';
            });
        }
      });
    }

    // Función para escanear el QR (solo cuando el usuario lo decida)
    function startScanning() {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');

      function scan() {
        // Si no estamos escaneando, detenemos el bucle
        if (!isScanning) {
          return;
        }

        // Asegurarse de que el video esté cargado
        if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {
          requestAnimationFrame(scan);
          return;
        }

        // Establecer el tamaño del canvas igual al del video
        canvas.width = videoElement.videoWidth;
        canvas.height = videoElement.videoHeight;

        // Dibujar el video en el canvas
        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);

        // Obtener los datos de la imagen del canvas
        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);

        // Escanear el código QR usando jsQR
        const qrCode = jsQR(imageData.data, canvas.width, canvas.height);

        if (qrCode) {
          outputElement.textContent = `Código QR Detectado: ${qrCode.data}`;
          isScanning = false;  // Detener el escaneo después de encontrar el QR
        } else {
          outputElement.textContent = 'Escaneando...';
        }

        // Continuar escaneando mientras estemos en el modo de escaneo
        requestAnimationFrame(scan);
      }

      // Iniciar el escaneo
      scan();
    }

    // Función para activar el escaneo al presionar el botón
    function toggleScan() {
      if (isScanning) {
        // Detener el escaneo
        isScanning = false;
        outputElement.textContent = 'Escaneo detenido. Presiona "Escanear QR" para empezar de nuevo.';
        scanButton.textContent = 'Escanear QR';
      } else {
        // Iniciar el escaneo
        isScanning = true;
        outputElement.textContent = 'Escaneando...';
        scanButton.textContent = 'Detener Escaneo';
        startScanning();
      }
    }

    // Iniciar la cámara cuando se cargue la página
    window.onload = () => {
      startCamera();
    };

    // Asociar la función al botón de escanear
    scanButton.addEventListener('click', toggleScan);

  </script>

</body>
</html>
